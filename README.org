* org-parser

=org-parser= is a parser for the [[https://orgmode.org/][Org mode]] markup language for Emacs.

It can be used from JavaScript, Java, and Clojure!

To our knowledge, there is no formal specification of Org. But there
is a [[https://orgmode.org/worg/dev/org-syntax.html]['spec' written in prose]] which lead to the [[https://orgmode.org/worg/dev/org-element-api.html][reference
implementation of Org in Emacs]].

Working on our web-based Org implementation [[https://github.com/200ok-ch/organice/][organice]], we have seen how
brittle existing libraries can be. It would be nice to have a proper
BNF based parser and a set of tests behind that. =org-parser=
strives to be that!

** Project State

This project is work-in-progress. It is not ready for production yet.

The biggest milestones are:

- [-] Finish [EBNF parser](http://xahlee.info/clojure/clojure_instaparse_grammar_syntax.html) to support most orgmode syntax
      - [X] Headlines and orgmode `#+*` stuff
      - [X] More features
      - [X] Footnotes (?)
      - [X] Timestamps
      - [X] Links
      - [-] Text links
      - [-] Styled text
      - [ ] Text that can contain style, links, footnotes, timestamps, ...

- [ ] Setup basic [instaparse transformations](http://xahlee.info/clojure/clojure_instaparse_transform.html) from the parse tree to a
      higher-level structure.

- [ ] Transformations to higher-level structure: catch up with orgmode
      features supported already by the EBNF parser

Not ready for production yet, *but it can already be useful* for you:
E.g. if your script needs to parse parts of orgmode features, our EBNF
parser probably already supports that. Do not underestimate
e.g. timestamps. Use our well-tested parser to disassemble it in its
parts, instead of trying to write a poor and ugly regex that is only
capable of a subset of orgmode's timestamps ;)

Don't hesitate to contribute!

** Development

=org-parser= uses [[https://github.com/Engelberg/instaparse/][instaparse]] which aims to be the simplest way to
build parsers in Clojure. Apart from living up to this claim (and
beyond the scope of just the one programming language), using
instaparse is great for another reason: Instaparse works both on CLJ
and CLJS. Therefore =org-parser= can be used from both ecosystems
which, of course, include JavaScript and Java. Hence, it is possible
to use it in various situations.

*** Prerequisites

Please install [[https://clojure.org/guides/getting_started][Clojure]] and [[https://leiningen.org/][Leiningen]].

There's no additional installation required. Leiningen will pull
dependencies if required.

*** Testing

Running the tests:

#+BEGIN_SRC shell
lein test
#+END_SRC

** License

Copyright Â© 2020 [[https://200ok.ch/][200ok llc]].

This program and the accompanying materials are made available under the
terms of the GNU Affero General Public License Version 3 which is made
available at https://www.gnu.org/licenses/agpl-3.0.en.html.
