# Clojure CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-clojure/ for more details
#
version: 2
jobs:
  test-clj:
    docker:
      - image: circleci/clojure:lein-2.7.1
    working_directory: ~/repo
    environment:
      LEIN_ROOT: "true"
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "project.clj" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: lein deps
      - run: lein test

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "project.clj" }}

  test-cljs:
    docker:
      - image: circleci/clojure:openjdk-8-lein-2.9.3-buster
    working_directory: ~/repo
    environment:
      LEIN_ROOT: "true"
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "project.clj" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: Install Node
          command: sudo apt-get update -y && sudo apt install -y nodejs

      - run: lein deps
      - run: lein doo node once

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "project.clj" }}

  release:
    docker:
      - image: clojure:lein-2.9.5-slim-buster
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "project.clj" }}
            - v1-dependencies-
      - run:
          name: Install dependencies
          command: apt-get update -yq && apt install -yq git
      - run:
          name: Configure Git
          command: |
            git config --global user.email "info@200ok.ch"
            git config --global user.name "200ok CI bot"
            git remote rm origin > /dev/null 2>&1
            # Set up origin with the ability to push to it through
            # token auth.
            git remote add origin "https://${GH_TOKEN}@github.com/200ok-ch/org-parser.git" > /dev/null 2>&1
            # Checkout the relevant branch. `lein release` does not
            # work from a commit sha.
            git checkout -b "$CIRCLE_BRANCH"


      - run:
          name: Deploy to Clojars
          command: |
            # Take away the `-SNAPSHOT` postfix from the latest version
            lein change version leiningen.release/bump-version release
            lein vcs commit "chore: Bump to version %s [skip ci]"
            lein vcs tag v --no-sign
            # Deploy this version to Clojars
            lein update-in :deploy-repositories conj "[\"clojars\" {:url \"https://repo.clojars.org/\" :username :env/clojars_username :password :env/clojars_password :sign-releases false}]" -- deploy clojars
            # Bump to the next patch level with `-SNAPSHOT` postfix
            lein change version leiningen.release/bump-version
            lein vcs commit "chore: Bump to version %s [skip ci]"
            git push --set-upstream origin setup-ci

workflows:
  version: 2
  run_tests:
    jobs:
      - test-clj
      - test-cljs
      - release:
          requires:
            - test-clj
            - test-cljs
          filters:
            branches:
              only: master
